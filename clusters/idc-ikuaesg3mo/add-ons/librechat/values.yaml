replicaCount: 1
global:
  librechat:
    existingSecretName: "librechat-credentials-env"
    existingSecretApiKey: OPENAI_API_KEY
    existingSecretGoogleApiKey: GOOGLE_KEY
librechat:
  configEnv:
    # This value triggers per-user mode for OpenAI API keys.
    # Users must later provide their own key in the UI (if the UI supports it).
    DEBUG_PLUGINS: "true"
    CREDS_KEY: 9e95d9894da7e68dd69c0046caf5343c8b1e80c89609b5a1e40e6568b5b23ce6
    CREDS_IV: ac028c86ba23f4cd48165e0ca9f2c683
    JWT_SECRET: 16f8c0ef4a5d391b26034086c628469d3f9f497f08163ab9b40137092f2909ef
    JWT_REFRESH_SECRET: eaa5191f2914e30b9387fd84e254e4ba6fc51b4654968a9b0803b456a54b8418
    ALLOW_UNVERIFIED_EMAIL_LOGIN: "true"
    ALLOW_REGISTRATION: "true"
    ALLOW_EMAIL_LOGIN: "true"
    ALLOW_SOCIAL_LOGIN: "true"
    SEARCH: "true"
  configYamlContent: |
    version: "1.2.1"
    endpoints:
      openAI:
        models:
          default: ["gpt-3.5-turbo", "gpt-4"]
          fetch: true
      google:
        models:
          default: ["gemini-1.5-pro"]
          fetch: true
      custom:
        - name: "Ollama"
          apiKey: "ollama"  # Dummy value required by LibreChat
          baseURL: "http://ollama:11434/v1/chat/completions"
          models:
            default: ["deepseek-coder:latest"]  # Match Ollama's add-on pull & run config
            fetch: true
          userIdQuery: false
          titleConvo: true
          titleModel: "current_model"
          summarize: false
          summaryModel: "current_model"
          forcePrompt: false
          modelDisplayLabel: "current_model"
  existingSecretName: "librechat-credentials-env"
image:
  repository: danny-avila/librechat
  registry: ghcr.io
  pullPolicy: IfNotPresent
  tag: "latest" # You may specify an explicit version tag if desired.
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
service:
  type: LoadBalancer
  port: 3080
  annotations: {}
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources: {}
podSecurityContext:
  fsGroup: 2000
securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000
nodeSelector: {}
tolerations: []
affinity: {}
updateStrategy:
  type: RollingUpdate
lifecycle: {}
podAnnotations: {}
podLabels: {}
volumes: []
volumeMounts: []
librechat-rag-api:
  enabled: false
  embeddingsProvider: openai
mongodb:
  image:
    registry: docker.io
    repository: dlavrenuek/bitnami-mongodb-arm
    tag: latest
  enabled: true
  auth:
    enabled: false
  databases:
    - LibreChat
meilisearch:
  enabled: true
  persistence:
    enabled: true
    storageClass: ""
  image:
    tag: "v1.7.3"
  auth:
    existingMasterKeySecret: "librechat-credentials-env"
