# Required as vectorDB for RAG
# provide context-aware responses based on user-uploaded files
global:
  librechat:
    existingSecretName: "librechat-credentials-env"
    existingSecretApiKey: OPENAI_API_KEY

rag:
  enabled: true
  configEnv:
    DB_HOST: "librechat-pg-cluster-rw.default.svc.cluster.local"
    DB_USER: "librechat_user"
    DB_NAME: "librechat_rag_db"
    EMBEDDINGS_PROVIDER: "huggingfacetei"
    EMBEDDINGS_MODEL: "http://embedding-minilm-l6-v2-transformer.kserve.svc.cluster.local/v2/models/embedding-minilm-l6-v2/infer"

  # This is the standard Kubernetes way to inject a secret as an environment variable.
  # This bypasses any application-level logic and ensures the correct password is set.
  extraEnv:
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "librechat-pg-cluster-app" # The name of the secret
          key: "password" # The key within the secret

image:
  repository: danny-avila/librechat-rag-api-dev # there is rag-api-dev and rag-api-dev-lite. currently only lite is documented
  registry: ghcr.io
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# By explicitly setting auth.existingSecret to an empty string,
# we can prevent the Helm chart from trying to mount a non-existent secret
# for a POSTGRES_PASSWORD, which is not needed since we use DB_PASSWORD_SECRET_NAME.
postgresql:
  auth:
    existingSecret: ""

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

podAnnotations: {}
podLabels: {}

podSecurityContext: {} # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  annotations: {}


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

serviceAccount:
  create: false
  name: ""
  annotations: {}

volumeMounts: {}

volumes: {}

nodeSelector: {}

tolerations: []

affinity: {}

extraContainers: {}